<?php

/**
 * Implements hook_theme_registry_alter().
 */
function element_order_theme_registry_alter(&$theme_registry) {
  $us = drupal_get_path('module', 'element_order');

  $overrides = array(
    'form_element' => 'element_order_theme_form_element',
    'field_multiple_value_form' => 'element_order_theme_field_multiple_value_form',
    'text_format_wrapper' => 'element_order_theme_text_format_wrapper',
    'field_collection_table_multiple_value_fields' => 'element_order_theme_field_collection_table_multiple_value_fields',
    'matrix_table' => 'element_order_theme_matrix_table',
  );

  foreach ($overrides as $theme_hook => $override_function) {
    if (!empty($theme_registry[$theme_hook])) {
      $theme_registry[$theme_hook]['function'] = $override_function;
      $theme_registry[$theme_hook]['includes'][] = $us . '/element_order.overrides.inc';
    }
  }
}

/**
 * Implements hook_element_info_alter().
 */
function element_order_element_info_alter(&$type) {
  if (!empty($type['text_format']) and module_exists('filter')) {
    $type['text_format']['#process'][] = 'element_order_filter_process_format';
  }
}


/**
 * Extra processing for 'text_format' elements.
 *
 * filter.module groups the title and the form element (#title, #children) into
 * the 'value' child of '#type' == 'text_format' element and renders the
 * '#description' item outside this, so there is no way to jam #description
 * between #title and #children.
 *
 * This processing is necessary in order to move the description from this
 * element to the child element 'value' when '#description_display' == 'before.
 */
function element_order_filter_process_format($element) {
  if (!empty($element['#description']) and !empty($element['#description_display']) and $element['#description_display'] == 'before') {
    $element['value']['#description'] = $element['#description'];
    unset($element['#description']);
  }
  return $element;
}
